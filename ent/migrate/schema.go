// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AttributesColumns holds the columns for the "attributes" table.
	AttributesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "value_type", Type: field.TypeString, Nullable: true},
		{Name: "value", Type: field.TypeString},
		{Name: "value_description", Type: field.TypeString, Nullable: true},
		{Name: "product_attributes", Type: field.TypeInt, Nullable: true},
	}
	// AttributesTable holds the schema information for the "attributes" table.
	AttributesTable = &schema.Table{
		Name:       "attributes",
		Columns:    AttributesColumns,
		PrimaryKey: []*schema.Column{AttributesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "attributes_products_attributes",
				Columns:    []*schema.Column{AttributesColumns[5]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "photo", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
	}
	// RatesColumns holds the columns for the "rates" table.
	RatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "rate", Type: field.TypeBool},
		{Name: "product_rates", Type: field.TypeInt, Nullable: true},
		{Name: "user_rates", Type: field.TypeInt, Nullable: true},
	}
	// RatesTable holds the schema information for the "rates" table.
	RatesTable = &schema.Table{
		Name:       "rates",
		Columns:    RatesColumns,
		PrimaryKey: []*schema.Column{RatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "rates_products_rates",
				Columns:    []*schema.Column{RatesColumns[2]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "rates_users_rates",
				Columns:    []*schema.Column{RatesColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// VectorsColumns holds the columns for the "vectors" table.
	VectorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "vector", Type: field.TypeBytes},
		{Name: "product_vectors", Type: field.TypeInt, Nullable: true},
	}
	// VectorsTable holds the schema information for the "vectors" table.
	VectorsTable = &schema.Table{
		Name:       "vectors",
		Columns:    VectorsColumns,
		PrimaryKey: []*schema.Column{VectorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "vectors_products_vectors",
				Columns:    []*schema.Column{VectorsColumns[2]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AttributesTable,
		ProductsTable,
		RatesTable,
		UsersTable,
		VectorsTable,
	}
)

func init() {
	AttributesTable.ForeignKeys[0].RefTable = ProductsTable
	RatesTable.ForeignKeys[0].RefTable = ProductsTable
	RatesTable.ForeignKeys[1].RefTable = UsersTable
	VectorsTable.ForeignKeys[0].RefTable = ProductsTable
}
